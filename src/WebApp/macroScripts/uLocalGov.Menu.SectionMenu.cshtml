@*
builds a section menu
*@

@inherits umbraco.MacroEngines.DynamicNodeContext
              
@{
    var root = @Model.AncestorOrSelf(); 
    if (@Model.AncestorOrSelf("SectionHomepage") != null)
    {
        root = @Model.AncestorOrSelf("SectionHomepage"); 
    }

    int menuLength = 6; 
    if ( root.HasValue("menuLength") ) {
        menuLength = root.menuLength; 
    }
}

<ul class="nav">
    @foreach (var item in @root.LandingPages.Where("!umbracoNaviHide").Take(menuLength) ) 
    {
        <li class="dropdown">
			<a href="@item.Url" class="dropdown-toggle" data-toggle="dropdown">@item.pageTitle<b class="caret"></b></a>
        	@BuildSubMenu(@item) 
        </li>
		<li class="divider-vertical"></li>
    }

    @if (@root.LandingPages.Where("!umbracoNaviHide").Count() > menuLength)
    {
    <li class="dropdown">
		<a href="#" class="dropdown-toggle" data-toggle="dropdown">More<b class="caret"></b></a>
        <ul class="dropdown-menu">
            @foreach( var item in @root.LandingPages.Where("!umbracoNaviHide").Skip(menuLength) ) {
                <li><a href="@item.Url">@item.pageTitle</a></li>
            }
        </ul>
    </li>
    }
</ul>

@helper BuildSubMenu(dynamic node)
{   
    int itemCount = 4; 
    if ( node.HasValue("menuItemCount")) {
        itemCount = node.menuItemCount; 
    }
    
    var items = node.Children.Where("!umbracoNaviHide").Take(itemCount); 
    if ( items.Count() > 0 ) {
		<ul class="dropdown-menu">
			@foreach (var item in items)
			{
				<li><a href="@item.Url">@item.pageTitle</a></li>   
			}
			
			@if ( node.Children.Where("!umbracoNaviHide").Count() > itemCount ) {
				<li><a href="@node.Url">View All...</a></li>
			}
        </ul>
    }    
}